# Configuration for Alacritty, the GPU enhanced terminal emulator.

# Any items in the `env` entry below will be added as
# environment variables. Some entries may override variables
# set by alacritty itself.
env:
  # TERM variable
  #
  # This value is used to set the `$TERM` environment variable for
  # each instance of Alacritty. If it is not present, alacritty will
  # check the local terminfo database and use `alacritty` if it is
  # available, otherwise `xterm-256color` is used.
  TERM: xterm-256color

window:
  # Window dimensions (changes require restart)
  #
  # Specified in number of columns/lines, not pixels.
  # If both are `0`, this setting is ignored.
  #dimensions:
  #  columns: 0
  #  lines: 0

  # Window position (changes require restart)
  #
  # Specified in number of pixels.
  # If the position is not set, the window manager will handle the placement.
  #position:
  #  x: 0
  #  y: 0

  # Window padding (changes require restart)
  #
  # Blank space added around the window in pixels. This padding is scaled
  # by DPI and the specified value is always added at both opposing sides.
  padding:
    x: 0
    y: 0

  # Spread additional padding evenly around the terminal content.
  dynamic_padding: false

  # Window decorations
  #
  # Values for `decorations`:
  #     - full: Borders and title bar
  #     - none: Neither borders nor title bar
  #
  # Values for `decorations` (macOS only):
  #     - transparent: Title bar, transparent background and title bar buttons
  #     - buttonless: Title bar, transparent background, but no title bar buttons
  #decorations: full

  # Startup Mode (changes require restart)
  #
  # Values for `startup_mode`:
  #   - Windowed
  #   - Maximized
  #   - Fullscreen
  #
  # Values for `startup_mode` (macOS only):
  #   - SimpleFullscreen
  #startup_mode: Windowed

  # Window title
  title: Alacritty

  # Window class (Linux/BSD only):
  class:
    # Application instance name
    instance: Alacritty
    # General application class
    general: Alacritty

  # GTK theme variant (Linux/BSD only)
  #
  # Override the variant of the GTK theme. Commonly supported values are `dark` and `light`.
  # Set this to `None` to use the default theme variant.
  #gtk_theme_variant: None

scrolling:
  # Maximum number of lines in the scrollback buffer.
  # Specifying '0' will disable scrolling.
  history: 5000

  # Number of lines the viewport will move for every line scrolled when
  # scrollback is enabled (history > 0).
  #multiplier: 3

  # Scroll to the bottom when new text is written to the terminal.
  #auto_scroll: false

# Spaces per Tab (changes require restart)
#
# This setting defines the width of a tab in cells.
#
# Some applications, like Emacs, rely on knowing about the width of a tab.
# To prevent unexpected behavior in these applications, it's also required to
# change the `it` value in terminfo when altering this setting.
#tabspaces: 8

# Font configuration
font:
  # Normal (roman) font face
  normal:
    # Font family
    #
    # Default:
    #   - (macOS) Menlo
    #   - (Linux/BSD) monospace
    #   - (Windows) Consolas
    # family: Sauce Code Pro Nerd Font
    family: CodeNewRoman Nerd Font
    # family: RobotoMono Nerd Font
    # family: Hack NF
    # family: JetBrains Mono Nerd Font
    # family: UbuntuMono Nerd Font
    # family: Monofur Nerd Font
    # family: TerminessTTF Nerd Font
    # family: Mononoki Nerd Font
    # family: CaskaydiaCove NF
    # family: Iosevka NF
    # family: FantasqueSansMono Nerd Font
    # family: Fira Code Nerd Font

    # The `style` can be specified to pick a specific face.
    style: Regular

  # Bold font face
  bold:
    # Font family
    #
    # If the bold family is not specified, it will fall back to the
    # value specified for the normal font.
    # family: Sauce Code Pro Nerd Font
    family: CodeNewRoman Nerd Font
    # family: RobotoMono Nerd Font
    # family: Hack NF
    # family: JetBrains Mono Nerd Font
    # family: UbuntuMono Nerd Font
    # family: Monofur Nerd Font
    # family: TerminessTTF Nerd Font
    # family: Mononoki Nerd Font
    # family: CaskaydiaCove NF
    # family: Iosevka NF
    # family: FantasqueSansMono Nerd Font
    # family: Fira Code Nerd Font

    # The `style` can be specified to pick a specific face.
    style: Bold

  # Italic font face
  italic:
    # Font family
    #
    # If the italic family is not specified, it will fall back to the
    # value specified for the normal font.
    # family: Sauce Code Pro Nerd Font
    family: CodeNewRoman Nerd Font
    # family: RobotoMono Nerd Font
    # family: Hack NF
    # family: JetBrains Mono Nerd Font
    # family: UbuntuMono Nerd Font
    # family: Monofuritalic Nerd Font Mono
    # family: TerminessTTF Nerd Font
    # family: Mononoki Nerd Font
    # family: CaskaydiaCove NF
    # family: Iosevka NF
    # family: FantasqueSansMono Nerd Font
    # family: Fira Code Nerd Font
    # family: Operator Mono

    # The `style` can be specified to pick a specific face.
    style: Italic

  # Bold italic font face
  bold_italic:
    # Font family
    #
    # If the bold italic family is not specified, it will fall back to the
    # value specified for the normal font.
    # family: Sauce Code Pro Nerd Font
    family: CodeNewRoman Nerd Font
    # family: RobotoMono Nerd Font
    # family: Hack NF
    # family: JetBrains Mono Nerd Font
    # family: UbuntuMono Nerd Font
    # family: Monofuritalic Nerd Font Mono
    # family: TerminessTTF Nerd Font
    # family: Mononoki Nerd Font
    # family: CaskaydiaCove NF
    # family: Iosevka NF
    # family: FantasqueSansMono Nerd Font
    # family: Fira Code Nerd Font
    # family: Operator Mono

    # The `style` can be specified to pick a specific face.
    style: Bold Italic

  # Point size
  size: 13
  # size: 14.5
  # size: 12.5
  # size: 13.0
  # size: 11.5
  # size: 11.0
  # size: 10.0

  # Offset is the extra space around each character. `offset.y` can be thought of
  # as modifying the line spacing, and `offset.x` as modifying the letter spacing.
  offset:
    x: 0
    y: 5

  # Glyph offset determines the locations of the glyphs within their cells with
  # the default being at the bottom. Increasing `x` moves the glyph to the right,
  # increasing `y` moves the glyph upwards.
  #glyph_offset:
  #  x: 0
  #  y: 0

  # Thin stroke font rendering (macOS only)
  #
  # Thin strokes are suitable for retina displays, but for non-retina screens
  # it is recommended to set `use_thin_strokes` to `false`
  #
  # macOS >= 10.14.x:
  #
  # If the font quality on non-retina display looks bad then set
  # `use_thin_strokes` to `true` and enable font smoothing by running the
  # following command:
  #   `defaults write -g CGFontRenderingFontSmoothingDisabled -bool NO`
  #
  # This is a global setting and will require a log out or restart to take
  # effect.
  #use_thin_strokes: true

# If `true`, bold text is drawn using the bright color variants.
draw_bold_text_with_bright_colors: true

# COLOR SCHEMES
schemes:
  # Solarized Dark
  material-ocean: &material-ocean
    # Default colors
    primary:
      background: '#0f101a'
      foreground: '#c5c9de'

    # Normal colors
    normal:
      black:   '#181a29'
      red:     '#F07178'
      green:   '#cdea9f'
      yellow:  '#ffd47e'
      blue:    '#93bbff'
      magenta: '#d3a7ee'
      cyan:    '#98e4ff'
      white:   '#bfd5de'

    # Bright colors
    bright:
      black:   '#282a40'
      red:     '#eb7f84'
      green:   '#e0ffad'
      yellow:  '#ffee7e'
      blue:    '#a3c5ff'
      magenta: '#d6afed'
      cyan:    '#98fffd'
      white:   '#d1e5ed'
  # Gotham
  gotham: &gotham
    primary:
      background: '#0a0f14'
      foreground: '#98d1ce'

    normal:
      black: '#0a0f14'
      red: '#c33027'
      green: '#26a98b'
      yellow: '#edb54b'
      blue: '#195465'
      magenta: '#4e5165'
      cyan: '#33859d'
      white: '#98d1ce'

    bright:
      black: '#10151b'
      red: '#d26939'
      green: '#081f2d'
      yellow: '#245361'
      blue: '#093748'
      magenta: '#888ba5'
      cyan: '#599caa'
      white: '#d3ebe9'
  # Tokyonight Day
  tokyonight-day: &tokyonight-day
    # Default colors
    primary:
      background: '#e1e2e7'
      foreground: '#3760bf'

    # Normal colors
    normal:
      black:   '#e9e9ed'
      red:     '#f52a65'
      green:   '#587539'
      yellow:  '#8c6c3e'
      blue:    '#2e7de9'
      magenta: '#9854f1'
      cyan:    '#007197'
      white:   '#6172b0'

    # Bright colors
    bright:
      black:   '#a1a6c5'
      red:     '#f52a65'
      green:   '#587539'
      yellow:  '#8c6c3e'
      blue:    '#2e7de9'
      magenta: '#9854f1'
      cyan:    '#007197'
      white:   '#3760bf'

    indexed_colors:
      - { index: 16, color: '#b15c00' }
      - { index: 17, color: '#c64343' }
  # TokyoNight
  tokyonight: &tokyonight
    # Default colors
    primary:
      background: '#1a1b26'
      foreground: '#c0caf5'

    cursor:
      text: CellBackground
      cursor: '#7aa2f7'

    # Normal colors
    normal:
      black:   '#15161E'
      red:     '#f7768e'
      green:   '#9ece6a'
      yellow:  '#e0af68'
      blue:    '#7aa2f7'
      magenta: '#bb9af7'
      cyan:    '#7dcfff'
      white:   '#a9b1d6'

    # Bright colors
    bright:
      black:   '#414868'
      red:     '#f7768e'
      green:   '#9ece6a'
      yellow:  '#e0af68'
      blue:    '#7aa2f7'
      magenta: '#bb9af7'
      cyan:    '#7dcfff'
      white:   '#c0caf5'
  # Dogrun
  dogrun: &dogrun
    primary:
      background: '#222433'
      foreground: '#9ea3c0'
    normal:
      black: '#222433'
      red: '#DC6F7A'
      green: '#7CBE8C'
      yellow: '#AC8B83'
      blue: '#589EC6'
      magenta: '#B871B8'
      cyan: '#59B6B6'
      white: '#9ea3c0'
    bright:
      black: '#222433'
      red: '#DC6F7A'
      green: '#73C1A9'
      yellow: '#A8A384'
      blue: '#59B6B6'
      magenta: '#929BE5'
      cyan: '#73C1A9'
      white: '#9ea3c0'
  # Nightfox
  nightfox: &nightfox
    # Default colors
    primary:
      background: '#192330'
      foreground: '#cdcecf'
    # Normal colors
    normal:
      black:   '#393b44'
      red:     '#c94f6d'
      green:   '#81b29a'
      yellow:  '#dbc074'
      blue:    '#719cd6'
      magenta: '#9d79d6'
      cyan:    '#63cdcf'
      white:   '#dfdfe0'
    # Bright colors
    bright:
      black:   '#475072'
      red:     '#d6616b'
      green:   '#58cd8b'
      yellow:  '#ffe37e'
      blue:    '#84cee4'
      magenta: '#b8a1e3'
      cyan:    '#59f0ff'
      white:   '#f2f2f2'
    indexed_colors:
      - { index: 16, color: '#f4a261' }
      - { index: 17, color: '#d67ad2' }  # Ayu mirage
  ayu-mirage: &ayu-mirage
    primary:
      background: '#212733'
      foreground: '#cbccc6'
      bright_foreground: '#f28779'

    # Normal colors
    normal:
      black:   '#212733' #
      red:     '#F28779' #
      green:   '#BAE67E' #
      yellow:  '#fdcc60' #
      blue:    '#73D0FF' # 
      magenta: '#F28779' #
      cyan:    '#95E6CB' #
      white:   '#D4BFFF' #

    # Brightened
    bright:
      black:   '#686868'
      red:     '#f58c7d'
      green:   '#58c49c'
      yellow:  '#ffd165'
      blue:    '#65bddb'
      magenta: '#f17676'
      cyan:    '#9debcf'
      white:   '#ffffff'
  # Nord
  nord: &nord
    primary:
      background: '#2E3440'
      foreground: '#D8DEE9'
    normal:
      black:   '#3B4252'
      red:     '#BF616A'
      green:   '#A3BE8C'
      yellow:  '#EBCB8B'
      blue:    '#81A1C1'
      magenta: '#B48EAD'
      cyan:    '#88C0D0'
      white:   '#E5E9F0'
    bright:
      black:   '#4C566A'
      red:     '#BF616A'
      green:   '#A3BE8C'
      yellow:  '#EBCB8B'
      blue:    '#81A1C1'
      magenta: '#B48EAD'
      cyan:    '#8FBCBB'
      white:   '#ECEFF4'
  # Ayu mirage
  ayu-mirage: &ayu-mirage
    # Default colors
    primary:
      background: '#1f2430'
      foreground: '#cbccc6'
      bright_foreground: '#f28779'

    # Normal colors
    normal:
      black:   '#212733' #
      red:     '#f08778' #
      green:   '#53bf97' #
      yellow:  '#fdcc60' #
      blue:    '#60b8d6' #
      magenta: '#ec7171' #
      cyan:    '#98e6ca' #
      white:   '#fafafa' #

    # Brightened
    bright:
      black:   '#212733' #
      red:     '#F28779' #
      green:   '#BAE67E' #
      yellow:  '#fdcc60' #
      blue:    '#73D0FF' # 
      magenta: '#F28779' #
      cyan:    '#95E6CB' #
      white:   '#D4BFFF' #
  # Horizon Dark
  horizon-dark: &horizon-dark
    primary:
      background: '#1c1e26'
      foreground: '#e0e0e0'
    normal:
      black:   '#16161c'
      red:     '#e95678'
      green:   '#29d398'
      yellow:  '#fab795'
      blue:    '#16bbd9'
      magenta: '#ee64ac'
      cyan:    '#59e1e3'
      white:   '#d5d8da'
    bright:
      black:   '#5b5858'
      red:     '#ec6a88'
      green:   '#3fdaa4'
      yellow:  '#fbc3a7'
      blue:    '#3fc4de'
      magenta: '#f075b5'
      cyan:    '#6be4e6'
      white:   '#d5d8da'
  # Tokyonight storm
  tokyonight-storm: &tokyonight-storm
    # Default colors
    primary:
      background: '#24283b'
      foreground: '#c0caf5'

    # Normal colors
    normal:
      black:   '#1D202F'
      red:     '#f7768e'
      green:   '#9ece6a'
      yellow:  '#e0af68'
      blue:    '#7aa2f7'
      magenta: '#bb9af7'
      cyan:    '#7dcfff'
      white:   '#a9b1d6'

    # Bright colors
    bright:
      black:   '#414868'
      red:     '#f7768e'
      green:   '#9ece6a'
      yellow:  '#e0af68'
      blue:    '#7aa2f7'
      magenta: '#bb9af7'
      cyan:    '#7dcfff'
      white:   '#c0caf5'

    indexed_colors:
      - { index: 16, color: '#ff9e64' }
      - { index: 17, color: '#db4b4b' }
  # Moonlight
  moonlight: &moonlight
    primary:
      background: '#212337'
      foreground: '#c8d3f5'
    cursor:
      text: CellBackground
      cursor: '#82aaff'

    normal:
      black: '#212337'
      red: '#ff757f'
      green: '#c3e88d'
      yellow: '#ffc777'
      blue: '#82aaff'
      magenta: '#c099ff'
      cyan: '#b4f9f8'
      white: '#c8d3f5'

    bright:
      black: '#212337'
      red: '#ff757f'
      green: '#c3e88d'
      yellow: '#ffc777'
      blue: '#82aaff'
      magenta: '#c099ff'
      cyan: '#b4f9f8'
      white: '#c8d3f5'
  # Vscode Dark
  codedark: &codedark
    primary:
      background: '#1e1e1e'
      foreground: '#d4d4d4'

    cursor:
      text: '#d4d4d4'
      cursor: '#d4d4d4'

    normal:
      black:   '#1e1e1e'
      red:     '#f44747'
      green:   '#608b4e'
      yellow:  '#dcdcaa'
      blue:    '#569cd6'
      magenta: '#c678dd'
      cyan:    '#56b6c2'
      white:   '#d4d4d4'

    bright:
      black:   '#545454'
      red:     '#f44747'
      green:   '#608b4e'
      yellow:  '#dcdcaa'
      blue:    '#569cd6'
      magenta: '#c678dd'
      cyan:    '#56b6c2'
      white:   '#d4d4d4'
  # Calvera Dark
  calvera_dark: &calvera_dark
    primary:
      background: "#0c0c1f"
      foreground: "#B0BEC5"
    cursor:
      text: CellBackground
      cursor: "#AAB4EC"
    normal:
      black: "#000000"
      red: "#E97A7A"
      green: "#ADCEA1"
      yellow: "#D6B295"
      blue: "#82AAFF"
      magenta: "#C792EA"
      cyan: "#7878E7"
      white: "#FFFFFF"
    bright:
      black: "#717CB4"
      red: "#FF5370"
      green: "#ADCEA1"
      yellow: "#D6B295"
      blue: "#82AAFF"
      magenta: "#FF9CAC"
      cyan: "#7878E7"
      white: "#B0BEC5"
  # Onedark
  onedark: &onedark
    primary:
      background: '#1e222a'
      foreground: '#abb2bf'
      bright_foreground: '#e6efff'

    cursor:
      text: CellBackground
      cursor: '#528bff'

    normal:
      black:   '#1e2127'
      red:     '#e06c75'
      green:   '#98c379'
      yellow:  '#d19a66'
      blue:    '#61afef'
      magenta: '#c678dd'
      cyan:    '#56b6c2'
      white:   '#828791'

    bright:
      black:   '#5c6370'
      red:     '#e06c75'
      green:   '#98c379'
      yellow:  '#d19a66'
      blue:    '#61afef'
      magenta: '#c678dd'
      cyan:    '#56b6c2'
      white:   '#e6efff'

    dim:
      black:   '#1e2127'
      red:     '#e06c75'
      green:   '#98c379'
      yellow:  '#d19a66'
      blue:    '#61afef'
      magenta: '#c678dd'
      cyan:    '#56b6c2'
      white:   '#828791'
  # Soft onedark
  soft-onedark: &soft-onedark
    primary:
      background: '#282c34'
      foreground: '#abb2bf'
      bright_foreground: '#e6efff'

    cursor:
      text: CellBackground
      cursor: '#528bff'

    normal:
      black:   '#1e2127'
      red:     '#e06c75'
      green:   '#98c379'
      yellow:  '#d19a66'
      blue:    '#61afef'
      magenta: '#c678dd'
      cyan:    '#56b6c2'
      white:   '#828791'

    bright:
      black:   '#5c6370'
      red:     '#e06c75'
      green:   '#98c379'
      yellow:  '#d19a66'
      blue:    '#61afef'
      magenta: '#c678dd'
      cyan:    '#56b6c2'
      white:   '#e6efff'

    dim:
      black:   '#1e2127'
      red:     '#e06c75'
      green:   '#98c379'
      yellow:  '#d19a66'
      blue:    '#61afef'
      magenta: '#c678dd'
      cyan:    '#56b6c2'
      white:   '#828791'
  gruvbox: &gruvbox
    primary:
      # hard contrast: background = '#1d2021'
      # medium contrast: background: '#282828'
      # soft contrast: background = '#32302f'
      background: '#1d2021'
      foreground: '#ebdbb2'
    normal:
      black:   '#282828'
      red:     '#cc241d'
      green:   '#98971a'
      yellow:  '#d79921'
      blue:    '#458588'
      magenta: '#b16286'
      cyan:    '#689d6a'
      white:   '#a89984'
    bright:
      black:   '#928374'
      red:     '#fb4934'
      green:   '#b8bb26'
      yellow:  '#fabd2f'
      blue:    '#83a598'
      magenta: '#d3869b'
      cyan:    '#8ec07c'
      white:   '#ebdbb2'
    # Doom One
    doom-one: &doom-one
      primary:
        background: '#282c34'
        foreground: '#bbc2cf'
      cursor:
        text: CellBackground
        cursor: '#528bff'
      selection:
        text: CellForeground
        background: '#3e4451'
      normal:
        black:   '#1c1f24'
        red:     '#ff6c6b'
        green:   '#98be65'
        yellow:  '#da8548'
        blue:    '#51afef'
        magenta: '#c678dd'
        cyan:    '#5699af'
        white:   '#202328'
      bright:
        black:   '#5b6268'
        red:     '#da8548'
        green:   '#4db5bd'
        yellow:  '#ecbe7b'
        blue:    '#3071db'   # This is 2257a0 in Doom Emacs but I lightened it.
        magenta: '#a9a1e1'
        cyan:    '#46d9ff'
        white:   '#dfdfdf'

  # Dracula
  dracula: &dracula
    primary:
      background: '#282a36'
      foreground: '#f8f8f2'
    cursor:
      text: CellBackground
      cursor: CellForeground
    vi_mode_cursor:
      text: CellBackground
      cursor: CellForeground
    search:
      matches:
        foreground: '#44475a'
        background: '#50fa7b'
      focused_match:
        foreground: '#44475a'
        background: '#ffb86c'
      bar:
        background: '#282a36'
        foreground: '#f8f8f2'
    line_indicator:
      foreground: None
      background: None
    selection:
      text: CellForeground
      background: '#44475a'
    normal:
      black:   '#000000'
      red:     '#ff5555'
      green:   '#50fa7b'
      yellow:  '#f1fa8c'
      blue:    '#bd93f9'
      magenta: '#ff79c6'
      cyan:    '#8be9fd'
      white:   '#bfbfbf'
    bright:
      black:   '#4d4d4d'
      red:     '#ff6e67'
      green:   '#5af78e'
      yellow:  '#f4f99d'
      blue:    '#caa9fa'
      magenta: '#ff92d0'
      cyan:    '#9aedfe'
      white:   '#e6e6e6'
    dim:
      black:   '#14151b'
      red:     '#ff2222'
      green:   '#1ef956'
      yellow:  '#ebf85b'
      blue:    '#4d5b86'
      magenta: '#ff46b0'
      cyan:    '#59dffc'
      white:   '#e6e6d1'

  # Colors (Solarized Light)
  solarized-light: &solarized-light
    # Default colors
    primary:
      background: '#fdf6e3' # base3
      foreground: '#657b83' # base00

    # Cursor colors
    cursor:
      text:   '#fdf6e3' # base3
      cursor: '#657b83' # base00

    # Normal colors
    normal:
      black:   '#073642' # base02
      red:     '#dc322f' # red
      green:   '#859900' # green
      yellow:  '#b58900' # yellow
      blue:    '#268bd2' # blue
      magenta: '#d33682' # magenta
      cyan:    '#2aa198' # cyan
      white:   '#eee8d5' # base2

    # Bright colors
    bright:
      black:   '#002b36' # base03
      red:     '#cb4b16' # orange
      green:   '#586e75' # base01
      yellow:  '#657b83' # base00
      blue:    '#839496' # base0
      magenta: '#6c71c4' # violet
      cyan:    '#93a1a1' # base1
      white:   '#fdf6e3' # base3

  # Colors (Solarized Dark)
  solarized-dark: &solarized-dark
    # Default colors
    primary:
      background: '#002b36' # base03
      foreground: '#839496' # base0

    # Cursor colors
    cursor:
      text:   '#002b36' # base03
      cursor: '#839496' # base0

    # Normal colors
    normal:
      black:   '#073642' # base02
      red:     '#dc322f' # red
      green:   '#859900' # green
      yellow:  '#b58900' # yellow
      blue:    '#268bd2' # blue
      magenta: '#d33682' # magenta
      cyan:    '#2aa198' # cyan
      white:   '#eee8d5' # base2

    # Bright colors
    bright:
      black:   '#002b36' # base03
      red:     '#cb4b16' # orange
      green:   '#586e75' # base01
      yellow:  '#657b83' # base00
      blue:    '#839496' # base0
      magenta: '#6c71c4' # violet
      cyan:    '#93a1a1' # base1
      white:   '#fdf6e3' # base3

# Choose ONE color scheme from those available in the above list.
colors: *calvera_dark

# Visual Bell
#
# Any time the BEL code is received, Alacritty "rings" the visual bell. Once
# rung, the terminal background will be set to white and transition back to the
# default background color. You can control the rate of this transition by
# setting the `duration` property (represented in milliseconds). You can also
# configure the transition function by setting the `animation` property.
#
# Values for `animation`:
#   - Ease
#   - EaseOut
#   - EaseOutSine
#   - EaseOutQuad
#   - EaseOutCubic
#   - EaseOutQuart
#   - EaseOutQuint
#   - EaseOutExpo
#   - EaseOutCirc
#   - Linear
#
# Specifying a `duration` of `0` will disable the visual bell.
#visual_bell:
#  animation: EaseOutExpo
#  duration: 0
#  color: '#ffffff'

# Background opacity
#
# Window opacity as a floating point number from `0.0` to `1.0`.
# The value `0.0` is completely transparent and `1.0` is opaque.
# background_opacity: 0.80

#selection:
  #semantic_escape_chars: ",│`|:\"' ()[]{}<>\t"

  # When set to `true`, selected text will be copied to the primary clipboard.
  #save_to_clipboard: false

# Allow terminal applications to change Alacritty's window title.
#dynamic_title: true

# cursor:
  # Cursor style
  #
  # Values for `style`:
  #   - ▇ Block
  #   - _ Underline
  #   - | Beam
  #style: Block

  # If this is `true`, the cursor will be rendered as a hollow box when the
  # window is not focused.
  #unfocused_hollow: true

# Live config reload (changes require restart)
live_config_reload: true

# Shell
#
# You can set `shell.program` to the path of your favorite shell, e.g. `/bin/fish`.
# Entries in `shell.args` are passed unmodified as arguments to the shell.
#
# Default:
#   - (macOS) /bin/bash --login
#   - (Linux/BSD) user login shell
#   - (Windows) powershell
#shell:
#  program: /bin/bash
#  args:
#    - --login

# Startup directory
#
# Directory the shell is started in. If this is unset, or `None`, the working
# directory of the parent process will be used.
#working_directory: None

# WinPTY backend (Windows only)
#
# Alacritty defaults to using the newer ConPTY backend if it is available,
# since it resolves a lot of bugs and is quite a bit faster. If it is not
# available, the the WinPTY backend will be used instead.
#
# Setting this option to `true` makes Alacritty use the legacy WinPTY backend,
# even if the ConPTY backend is available.
#winpty_backend: false

# Send ESC (\x1b) before characters when alt is pressed.
#alt_send_esc: true

#debug:
  # Display the time it takes to redraw each frame.
  #render_timer: false

  # Keep the log file after quitting Alacritty.
  #persistent_logging: false

  # Log level
  #
  # Values for `log_level`:
  #   - None
  #   - Error
  #   - Warn
  #   - Info
  #   - Debug
  #   - Trace
  #log_level: Warn

  # Print all received window events.
  #print_events: false

  # Record all characters and escape sequences as test data.
  #ref_test: false

#mouse:
  # Click settings
  #
  # The `double_click` and `triple_click` settings control the time
  # alacritty should wait for accepting multiple clicks as one double
  # or triple click.
  #double_click: { threshold: 300 }
  #triple_click: { threshold: 300 }

  # If this is `true`, the cursor is temporarily hidden when typing.
  #hide_when_typing: false

  #url:
    # URL launcher
    #
    # This program is executed when clicking on a text which is recognized as a URL.
    # The URL is always added to the command as the last parameter.
    #
    # When set to `None`, URL launching will be disabled completely.
    #
    # Default:
    #   - (macOS) open
    #   - (Linux/BSD) xdg-open
    #   - (Windows) explorer
    #launcher:
    #  program: xdg-open
    #  args: []

    # URL modifiers
    #
    # These are the modifiers that need to be held down for opening URLs when clicking
    # on them. The available modifiers are documented in the key binding section.
    #modifiers: None

# Mouse bindings
#
# Mouse bindings are specified as a list of objects, much like the key
# bindings further below.
#
# Each mouse binding will specify a:
#
# - `mouse`:
#
#   - Middle
#   - Left
#   - Right
#   - Numeric identifier such as `5`
#
# - `action` (see key bindings)
#
# And optionally:
#
# - `mods` (see key bindings)
#mouse_bindings:
#  - { mouse: Middle, action: PasteSelection }

# Key bindings
#
# Key bindings are specified as a list of objects. For example, this is the
# default paste binding:
#
# `- { key: V, mods: Control|Shift, action: Paste }`
#
# Each key binding will specify a:
#
# - `key`: Identifier of the key pressed
#
#    - A-Z
#    - F1-F24
#    - Key0-Key9
#
#    A full list with available key codes can be found here:
#    https://docs.rs/glutin/*/glutin/event/enum.VirtualKeyCode.html#variants
#
#    Instead of using the name of the keys, the `key` field also supports using
#    the scancode of the desired key. Scancodes have to be specified as a
#    decimal number. This command will allow you to display the hex scancodes
#    for certain keys:
#
#       `showkey --scancodes`.
#
# Then exactly one of:
#
# - `chars`: Send a byte sequence to the running application
#
#    The `chars` field writes the specified string to the terminal. This makes
#    it possible to pass escape sequences. To find escape codes for bindings
#    like `PageUp` (`"\x1b[5~"`), you can run the command `showkey -a` outside
#    of tmux. Note that applications use terminfo to map escape sequences back
#    to keys. It is therefore required to update the terminfo when changing an
#    escape sequence.
#
# - `action`: Execute a predefined action
#
#   - Copy
#   - Paste
#   - PasteSelection
#   - IncreaseFontSize
#   - DecreaseFontSize
#   - ResetFontSize
#   - ScrollPageUp
#   - ScrollPageDown
#   - ScrollLineUp
#   - ScrollLineDown
#   - ScrollToTop
#   - ScrollToBottom
#   - ClearHistory
#   - Hide
#   - Minimize
#   - Quit
#   - ToggleFullscreen
#   - SpawnNewInstance
#   - ClearLogNotice
#   - ReceiveChar
#   - None
#
#   (macOS only):
#   - ToggleSimpleFullscreen: Enters fullscreen without occupying another space
#
# - `command`: Fork and execute a specified command plus arguments
#
#    The `command` field must be a map containing a `program` string and an
#    `args` array of command line parameter strings. For example:
#       `{ program: "alacritty", args: ["-e", "vttest"] }`
#
# And optionally:
#
# - `mods`: Key modifiers to filter binding actions
#
#    - Command
#    - Control
#    - Option
#    - Super
#    - Shift
#    - Alt
#
#    Multiple `mods` can be combined using `|` like this:
#       `mods: Control|Shift`.
#    Whitespace and capitalization are relevant and must match the example.
#
# - `mode`: Indicate a binding for only specific terminal reported modes
#
#    This is mainly used to send applications the correct escape sequences
#    when in different modes.
#
#    - AppCursor
#    - AppKeypad
#    - Alt
#
#    A `~` operator can be used before a mode to apply the binding whenever
#    the mode is *not* active, e.g. `~Alt`.
#
# Bindings are always filled by default, but will be replaced when a new
# binding with the same triggers is defined. To unset a default binding, it can
# be mapped to the `ReceiveChar` action. Alternatively, you can use `None` for
# a no-op if you do not wish to receive input characters for that binding.
key_bindings:
    # (Windows, Linux, and BSD only)
  - { key: V,         mods: Control|Shift, action: Paste                       }
  - { key: C,         mods: Control|Shift, action: Copy                        }
  - { key: Insert,    mods: Shift,         action: PasteSelection              }
  - { key: Key0,      mods: Control,       action: ResetFontSize               }
  - { key: Equals,    mods: Control,       action: IncreaseFontSize            }
  - { key: Plus,      mods: Control,       action: IncreaseFontSize            }
  - { key: Minus,     mods: Control,       action: DecreaseFontSize            }
  - { key: F11,       mods: None,          action: ToggleFullscreen            }
  - { key: Paste,     mods: None,          action: Paste                       }
  - { key: Copy,      mods: None,          action: Copy                        }
  - { key: L,         mods: Control,       action: ClearLogNotice              }
  - { key: L,         mods: Control,       chars: "\x0c"                       }
  - { key: PageUp,    mods: None,          action: ScrollPageUp,   mode: ~Alt  }
  - { key: PageDown,  mods: None,          action: ScrollPageDown, mode: ~Alt  }
  - { key: Home,      mods: Shift,         action: ScrollToTop,    mode: ~Alt  }
  - { key: End,       mods: Shift,         action: ScrollToBottom, mode: ~Alt  }

cursor:
  thickness: 0
